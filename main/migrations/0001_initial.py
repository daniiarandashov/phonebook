# Generated by Django 3.1.7 on 2021-03-13 16:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_column='admin_email', db_index=True, max_length=65, unique=True, verbose_name='Email Adress')),
                ('username', models.CharField(db_column='username', db_index=True, max_length=26, verbose_name='Username')),
                ('date_joined', models.DateField(default=django.utils.timezone.now, verbose_name='Date Joined')),
                ('active', models.BooleanField(default=True, verbose_name='Is_Active')),
                ('staff', models.BooleanField(default=False, verbose_name='Is_Staff')),
                ('admin', models.BooleanField(default=False, verbose_name='Is_Admin')),
                ('role', models.CharField(choices=[('ADM', 'Administrator'), ('MNG', 'Manager'), ('GST', 'Guest')], default='Guest', max_length=20, verbose_name='Position')),
                ('country', models.CharField(choices=[('KG', 'Kyrgyzstan'), ('TJ', 'Tajikistan'), ('KZ', 'Kazakhstan')], default='Kyrgyzstan', max_length=25, verbose_name='Country')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='PhoneBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('phone_number', models.DecimalField(decimal_places=0, max_digits=12, unique=True, verbose_name='Номер телефона')),
                ('email', models.EmailField(max_length=60, unique=True)),
                ('city', models.CharField(choices=[('KG', 'Kyrgyzstan'), ('TJ', 'Tajikistan'), ('KZ', 'Kazakhstan')], default='Kyrgyzstan', max_length=30, verbose_name='Город проживания')),
                ('age', models.IntegerField(verbose_name='Возраст')),
                ('gender', models.CharField(choices=[('Мужской', 'Мужской'), ('Женский', 'Женский')], default=(('Мужской', 'Мужской'),), max_length=25, verbose_name='Пол')),
                ('work_status', models.CharField(choices=[('Работает', 'Работает'), ('Уволен', 'Уволен'), ('Отпуск', 'Отпуск'), ('Больничный', 'Больничный')], default=(('Работает', 'Работает'),), max_length=25, verbose_name='Статус работы')),
                ('employment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата приема на работу')),
                ('date_of_dismissal', models.DateField(blank=True, null=True, verbose_name='Дата увольнения')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Абонент',
                'verbose_name_plural': 'Телефонная книга',
                'ordering': ('first_name',),
            },
        ),
    ]
